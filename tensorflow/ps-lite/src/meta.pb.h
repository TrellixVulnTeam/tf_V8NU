// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/ps-lite/src/meta.proto

#ifndef PROTOBUF_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto__INCLUDED
#define PROTOBUF_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace ps {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
void protobuf_AssignDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
void protobuf_ShutdownFile_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();

class PBControl;
class PBMeta;
class PBNode;

// ===================================================================

class PBNode : public ::google::protobuf::MessageLite {
 public:
  PBNode();
  virtual ~PBNode();

  PBNode(const PBNode& from);

  inline PBNode& operator=(const PBNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PBNode& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBNode* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBNode* other);

  // implements Message ----------------------------------------------

  inline PBNode* New() const { return New(NULL); }

  PBNode* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBNode& from);
  void MergeFrom(const PBNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 role = 1;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  ::google::protobuf::int32 role() const;
  void set_role(::google::protobuf::int32 value);

  // optional int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string hostname = 3;
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 3;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ps.PBNode)
 private:
  inline void set_has_role();
  inline void clear_has_role();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_hostname();
  inline void clear_has_hostname();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 role_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::int32 port_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
  #endif
  friend void protobuf_AssignDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();

  void InitAsDefaultInstance();
  static PBNode* default_instance_;
};
// -------------------------------------------------------------------

class PBControl : public ::google::protobuf::MessageLite {
 public:
  PBControl();
  virtual ~PBControl();

  PBControl(const PBControl& from);

  inline PBControl& operator=(const PBControl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PBControl& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBControl* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBControl* other);

  // implements Message ----------------------------------------------

  inline PBControl* New() const { return New(NULL); }

  PBControl* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBControl& from);
  void MergeFrom(const PBControl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // repeated .ps.PBNode node = 2;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 2;
  const ::ps::PBNode& node(int index) const;
  ::ps::PBNode* mutable_node(int index);
  ::ps::PBNode* add_node();
  ::google::protobuf::RepeatedPtrField< ::ps::PBNode >*
      mutable_node();
  const ::google::protobuf::RepeatedPtrField< ::ps::PBNode >&
      node() const;

  // optional int32 barrier_group = 3;
  bool has_barrier_group() const;
  void clear_barrier_group();
  static const int kBarrierGroupFieldNumber = 3;
  ::google::protobuf::int32 barrier_group() const;
  void set_barrier_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ps.PBControl)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_barrier_group();
  inline void clear_has_barrier_group();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ps::PBNode > node_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 barrier_group_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
  #endif
  friend void protobuf_AssignDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();

  void InitAsDefaultInstance();
  static PBControl* default_instance_;
};
// -------------------------------------------------------------------

class PBMeta : public ::google::protobuf::MessageLite {
 public:
  PBMeta();
  virtual ~PBMeta();

  PBMeta(const PBMeta& from);

  inline PBMeta& operator=(const PBMeta& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PBMeta& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBMeta* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBMeta* other);

  // implements Message ----------------------------------------------

  inline PBMeta* New() const { return New(NULL); }

  PBMeta* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBMeta& from);
  void MergeFrom(const PBMeta& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  ::google::protobuf::int32 head() const;
  void set_head(::google::protobuf::int32 value);

  // optional bytes body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional .ps.PBControl control = 3;
  bool has_control() const;
  void clear_control();
  static const int kControlFieldNumber = 3;
  const ::ps::PBControl& control() const;
  ::ps::PBControl* mutable_control();
  ::ps::PBControl* release_control();
  void set_allocated_control(::ps::PBControl* control);

  // optional bool request = 4 [default = false];
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 4;
  bool request() const;
  void set_request(bool value);

  // optional int32 customer_id = 7;
  bool has_customer_id() const;
  void clear_customer_id();
  static const int kCustomerIdFieldNumber = 7;
  ::google::protobuf::int32 customer_id() const;
  void set_customer_id(::google::protobuf::int32 value);

  // optional int32 timestamp = 8;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 8;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // repeated int32 data_type = 9 [packed = true];
  int data_type_size() const;
  void clear_data_type();
  static const int kDataTypeFieldNumber = 9;
  ::google::protobuf::int32 data_type(int index) const;
  void set_data_type(int index, ::google::protobuf::int32 value);
  void add_data_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data_type();

  // optional bool push = 5;
  bool has_push() const;
  void clear_push();
  static const int kPushFieldNumber = 5;
  bool push() const;
  void set_push(bool value);

  // optional bool simple_app = 6 [default = false];
  bool has_simple_app() const;
  void clear_simple_app();
  static const int kSimpleAppFieldNumber = 6;
  bool simple_app() const;
  void set_simple_app(bool value);

  // @@protoc_insertion_point(class_scope:ps.PBMeta)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_control();
  inline void clear_has_control();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_customer_id();
  inline void clear_has_customer_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_push();
  inline void clear_has_push();
  inline void set_has_simple_app();
  inline void clear_has_simple_app();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::ps::PBControl* control_;
  ::google::protobuf::int32 head_;
  ::google::protobuf::int32 customer_id_;
  ::google::protobuf::int32 timestamp_;
  bool request_;
  bool push_;
  bool simple_app_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_type_;
  mutable int _data_type_cached_byte_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
  #endif
  friend void protobuf_AssignDesc_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();
  friend void protobuf_ShutdownFile_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto();

  void InitAsDefaultInstance();
  static PBMeta* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PBNode

// required int32 role = 1;
inline bool PBNode::has_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBNode::set_has_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBNode::clear_has_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBNode::clear_role() {
  role_ = 0;
  clear_has_role();
}
inline ::google::protobuf::int32 PBNode::role() const {
  // @@protoc_insertion_point(field_get:ps.PBNode.role)
  return role_;
}
inline void PBNode::set_role(::google::protobuf::int32 value) {
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:ps.PBNode.role)
}

// optional int32 id = 2;
inline bool PBNode::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBNode::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBNode::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBNode::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PBNode::id() const {
  // @@protoc_insertion_point(field_get:ps.PBNode.id)
  return id_;
}
inline void PBNode::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ps.PBNode.id)
}

// optional string hostname = 3;
inline bool PBNode::has_hostname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBNode::set_has_hostname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBNode::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBNode::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostname();
}
inline const ::std::string& PBNode::hostname() const {
  // @@protoc_insertion_point(field_get:ps.PBNode.hostname)
  return hostname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBNode::set_hostname(const ::std::string& value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ps.PBNode.hostname)
}
inline void PBNode::set_hostname(const char* value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ps.PBNode.hostname)
}
inline void PBNode::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ps.PBNode.hostname)
}
inline ::std::string* PBNode::mutable_hostname() {
  set_has_hostname();
  // @@protoc_insertion_point(field_mutable:ps.PBNode.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBNode::release_hostname() {
  clear_has_hostname();
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBNode::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    set_has_hostname();
  } else {
    clear_has_hostname();
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:ps.PBNode.hostname)
}

// optional int32 port = 4;
inline bool PBNode::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBNode::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBNode::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBNode::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 PBNode::port() const {
  // @@protoc_insertion_point(field_get:ps.PBNode.port)
  return port_;
}
inline void PBNode::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:ps.PBNode.port)
}

// -------------------------------------------------------------------

// PBControl

// required int32 cmd = 1;
inline bool PBControl::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBControl::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBControl::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBControl::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 PBControl::cmd() const {
  // @@protoc_insertion_point(field_get:ps.PBControl.cmd)
  return cmd_;
}
inline void PBControl::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:ps.PBControl.cmd)
}

// repeated .ps.PBNode node = 2;
inline int PBControl::node_size() const {
  return node_.size();
}
inline void PBControl::clear_node() {
  node_.Clear();
}
inline const ::ps::PBNode& PBControl::node(int index) const {
  // @@protoc_insertion_point(field_get:ps.PBControl.node)
  return node_.Get(index);
}
inline ::ps::PBNode* PBControl::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:ps.PBControl.node)
  return node_.Mutable(index);
}
inline ::ps::PBNode* PBControl::add_node() {
  // @@protoc_insertion_point(field_add:ps.PBControl.node)
  return node_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ps::PBNode >*
PBControl::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:ps.PBControl.node)
  return &node_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ps::PBNode >&
PBControl::node() const {
  // @@protoc_insertion_point(field_list:ps.PBControl.node)
  return node_;
}

// optional int32 barrier_group = 3;
inline bool PBControl::has_barrier_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBControl::set_has_barrier_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBControl::clear_has_barrier_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBControl::clear_barrier_group() {
  barrier_group_ = 0;
  clear_has_barrier_group();
}
inline ::google::protobuf::int32 PBControl::barrier_group() const {
  // @@protoc_insertion_point(field_get:ps.PBControl.barrier_group)
  return barrier_group_;
}
inline void PBControl::set_barrier_group(::google::protobuf::int32 value) {
  set_has_barrier_group();
  barrier_group_ = value;
  // @@protoc_insertion_point(field_set:ps.PBControl.barrier_group)
}

// -------------------------------------------------------------------

// PBMeta

// optional int32 head = 1;
inline bool PBMeta::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMeta::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMeta::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMeta::clear_head() {
  head_ = 0;
  clear_has_head();
}
inline ::google::protobuf::int32 PBMeta::head() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.head)
  return head_;
}
inline void PBMeta::set_head(::google::protobuf::int32 value) {
  set_has_head();
  head_ = value;
  // @@protoc_insertion_point(field_set:ps.PBMeta.head)
}

// optional bytes body = 2;
inline bool PBMeta::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMeta::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMeta::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMeta::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& PBMeta::body() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMeta::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ps.PBMeta.body)
}
inline void PBMeta::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ps.PBMeta.body)
}
inline void PBMeta::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ps.PBMeta.body)
}
inline ::std::string* PBMeta::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:ps.PBMeta.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMeta::release_body() {
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMeta::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:ps.PBMeta.body)
}

// optional .ps.PBControl control = 3;
inline bool PBMeta::has_control() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBMeta::set_has_control() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBMeta::clear_has_control() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBMeta::clear_control() {
  if (control_ != NULL) control_->::ps::PBControl::Clear();
  clear_has_control();
}
inline const ::ps::PBControl& PBMeta::control() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.control)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return control_ != NULL ? *control_ : *default_instance().control_;
#else
  return control_ != NULL ? *control_ : *default_instance_->control_;
#endif
}
inline ::ps::PBControl* PBMeta::mutable_control() {
  set_has_control();
  if (control_ == NULL) {
    control_ = new ::ps::PBControl;
  }
  // @@protoc_insertion_point(field_mutable:ps.PBMeta.control)
  return control_;
}
inline ::ps::PBControl* PBMeta::release_control() {
  clear_has_control();
  ::ps::PBControl* temp = control_;
  control_ = NULL;
  return temp;
}
inline void PBMeta::set_allocated_control(::ps::PBControl* control) {
  delete control_;
  control_ = control;
  if (control) {
    set_has_control();
  } else {
    clear_has_control();
  }
  // @@protoc_insertion_point(field_set_allocated:ps.PBMeta.control)
}

// optional bool request = 4 [default = false];
inline bool PBMeta::has_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBMeta::set_has_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBMeta::clear_has_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBMeta::clear_request() {
  request_ = false;
  clear_has_request();
}
inline bool PBMeta::request() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.request)
  return request_;
}
inline void PBMeta::set_request(bool value) {
  set_has_request();
  request_ = value;
  // @@protoc_insertion_point(field_set:ps.PBMeta.request)
}

// optional int32 customer_id = 7;
inline bool PBMeta::has_customer_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBMeta::set_has_customer_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBMeta::clear_has_customer_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBMeta::clear_customer_id() {
  customer_id_ = 0;
  clear_has_customer_id();
}
inline ::google::protobuf::int32 PBMeta::customer_id() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.customer_id)
  return customer_id_;
}
inline void PBMeta::set_customer_id(::google::protobuf::int32 value) {
  set_has_customer_id();
  customer_id_ = value;
  // @@protoc_insertion_point(field_set:ps.PBMeta.customer_id)
}

// optional int32 timestamp = 8;
inline bool PBMeta::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBMeta::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBMeta::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBMeta::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 PBMeta::timestamp() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.timestamp)
  return timestamp_;
}
inline void PBMeta::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ps.PBMeta.timestamp)
}

// repeated int32 data_type = 9 [packed = true];
inline int PBMeta::data_type_size() const {
  return data_type_.size();
}
inline void PBMeta::clear_data_type() {
  data_type_.Clear();
}
inline ::google::protobuf::int32 PBMeta::data_type(int index) const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.data_type)
  return data_type_.Get(index);
}
inline void PBMeta::set_data_type(int index, ::google::protobuf::int32 value) {
  data_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:ps.PBMeta.data_type)
}
inline void PBMeta::add_data_type(::google::protobuf::int32 value) {
  data_type_.Add(value);
  // @@protoc_insertion_point(field_add:ps.PBMeta.data_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBMeta::data_type() const {
  // @@protoc_insertion_point(field_list:ps.PBMeta.data_type)
  return data_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBMeta::mutable_data_type() {
  // @@protoc_insertion_point(field_mutable_list:ps.PBMeta.data_type)
  return &data_type_;
}

// optional bool push = 5;
inline bool PBMeta::has_push() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBMeta::set_has_push() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBMeta::clear_has_push() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBMeta::clear_push() {
  push_ = false;
  clear_has_push();
}
inline bool PBMeta::push() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.push)
  return push_;
}
inline void PBMeta::set_push(bool value) {
  set_has_push();
  push_ = value;
  // @@protoc_insertion_point(field_set:ps.PBMeta.push)
}

// optional bool simple_app = 6 [default = false];
inline bool PBMeta::has_simple_app() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBMeta::set_has_simple_app() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBMeta::clear_has_simple_app() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBMeta::clear_simple_app() {
  simple_app_ = false;
  clear_has_simple_app();
}
inline bool PBMeta::simple_app() const {
  // @@protoc_insertion_point(field_get:ps.PBMeta.simple_app)
  return simple_app_;
}
inline void PBMeta::set_simple_app(bool value) {
  set_has_simple_app();
  simple_app_ = value;
  // @@protoc_insertion_point(field_set:ps.PBMeta.simple_app)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ps

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fps_2dlite_2fsrc_2fmeta_2eproto__INCLUDED
